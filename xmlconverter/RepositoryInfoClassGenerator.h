#pragma once

#include <string>
#include <iostream>
#include <fstream>

#include "export.h"

class XMLCONVERTER_API RepositoryInfoClassGenerator
{
public:
	
	RepositoryInfoClassGenerator() = default;

	static void generate(const std::string & baseFile, const std::string & schemaFileName,
			const std::string & packageName)
	{
		std::string fileName = baseFile + "/" + "_Repository_Info.h";
		std::filebuf fb;
		if (fb.open(fileName, std::ios::in))
		{
			std::ostream os(&fb);
			os << "// Title:        _Repository_Info" << std::endl;
			os << "// Copyright:    Copyright (c) 2001" << std::endl;
			os << "// Author:       XML to Java Wizard" << std::endl;
			os << "// Company:      Deutsche Bank." << std::endl;
			os << "// Description:  This class was generated by the XML to Java Wizard." << std::endl;
			os << "//               It contains information on the source schema that was used to" << std::endl;
			os << "//               create this repository package." << std::endl;
			os << "// Schema name:  " << std::endl;
			os << "// Java SDK:     1.2.2 or later" << std::endl;
			if (!packageName.empty())
				os << "package " << std::endl;
			os << "public class _Repository_Info" << std::endl;
			os << "{" << std::endl;
			os << "\tpublic static String getRepositoryURI()" << std::endl;
			os << "\t{" << std::endl;
			os << "\t\treturn \"" << schemaFileName << "\";" << std::endl;
			os << "\t}" << std::endl;
			os << "}" << std::endl;
			os.flush;
		}
	}
};